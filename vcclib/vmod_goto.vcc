# auto_docs = false
#-
# Copyright (c) 2016-2019 Varnish Software
#
# Author: Guillaume Quintard <guillaume.quintard@gmail.com>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

$Module goto 3 "goto VMOD"
$License
$Event vmod_event
$Object dns_director(PRIV_VCL,
	STRING s,
	STRING port = "",
	STRING host_header = "",
	DURATION connect_timeout = 0,
	DURATION first_byte_timeout = 0,
	DURATION between_bytes_timeout = 0,
	PROBE probe = 0,
	INT max_connections = 0,
	BOOL ssl = 0,
	BOOL ssl_sni = 1,
	BOOL ssl_verify_peer = 1,
	BOOL ssl_verify_host = 0,
	ENUM {all, ipv4, ipv6} ip_version = "all",
	DURATION ttl = 10,
	ENUM {abide, force, morethan, lessthan} ttl_rule = "force",
	ACL acl = 0,
	ENUM {onerror, onempty, never} ignore_update = "never",
	STRING certificate = "",
	ENUM {abide, force} port_rule = "abide",
	STRING extra_string = "")

$Method BACKEND .backend()

$Function BACKEND dns_backend(PRIV_VCL, PRIV_TASK,
	STRING s,
	STRING port = "",
	STRING host_header = "",
	DURATION connect_timeout = 0,
	DURATION first_byte_timeout = 0,
	DURATION between_bytes_timeout = 0,
	PROBE probe = 0,
	INT max_connections = 0,
	BOOL ssl = 0,
	BOOL ssl_sni = 1,
	BOOL ssl_verify_peer = 1,
	BOOL ssl_verify_host = 0,
	ENUM {all, ipv4, ipv6} ip_version = "all",
	DURATION ttl = 10,
	ENUM {abide, force, morethan, lessthan} ttl_rule = "force",
	ACL acl = 0,
	ENUM {onerror, onempty, never} ignore_update = "never",
	STRING certificate = "",
	ENUM {abide, force} port_rule = "abide",
	STRING extra_string = "")
$Restrict backend vcl_pipe vcl_connect
