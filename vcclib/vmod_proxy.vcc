#-
# Copyright (c) 2018 GANDI SAS
# All rights reserved.
#
# Author: Emmanuel Hocdet <manu@gandi.net>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

$Module proxy 3 "ProxyV2 TLV Attribute Extraction (proxy)"
$ABI strict

DESCRIPTION
===========

The ``proxy`` vmod contains functions to extract proxy-protocol-v2 TLV attributes
as described in https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt.

API
===

$Function STRING alpn()
$Restrict client

Extract ALPN attribute.

::

  set req.http.alpn = proxy.alpn();

$Function STRING authority()
$Restrict client

Extract authority attribute. This corresponds to SNI from a TLS connection.

::

  set req.http.authority = proxy.authority();

$Function BOOL is_ssl()
$Restrict client

Report if proxy-protocol-v2 has SSL TLV.

::

  if (proxy.is_ssl()) {
    set req.http.ssl-version = proxy.ssl_version();
  }

$Function BOOL client_has_cert_sess()
$Restrict client

Report if the client provided a certificate at least once over the TLS
session this connection belongs to.

$Function BOOL client_has_cert_conn()
$Restrict client

Report if the client provided a certificate over the current connection.

$Function INT ssl_verify_result()
$Restrict client

Report the SSL_get_verify_result from a TLS session. It only matters
if client_has_cert_sess() is true. Per default, value is set to 0 (X509_V_OK).

::

  if (proxy.client_has_cert_sess() && proxy.ssl_verify_result() == 0) {
    set req.http.ssl-verify = "ok";
  }

$Function STRING ssl_version()
$Restrict client

Extract SSL version attribute.

::

  set req.http.ssl-version = proxy.ssl_version();

$Function STRING client_cert_cn()
$Restrict client

Extract the common name attribute of the client certificate's.

::

  set req.http.cert-cn = proxy.client_cert_cn();

$Function STRING ssl_cipher()
$Restrict client

Extract the SSL cipher attribute.

::

  set req.http.ssl-cipher = proxy.ssl_cipher();

$Function STRING cert_sign()
$Restrict client

Extract the certificate signature algorithm attribute.

::

  set req.http.cert-sign = proxy.cert_sign();

$Function STRING cert_key()
$Restrict client

Extract the certificate key algorithm attribute.

::

  set req.http.cert-key = proxy.cert_key();

REFERENCES
==========

* :ref:`varnishd(1)`
* :ref:`vsl(7)`

AVAILABILITY
============

The ``proxy`` VMOD is available in Varnish Enterprise version ``6.0.0r0`` and later.

