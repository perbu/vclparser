#-
# auto_docs = false
# Copyright (c) 2017 Varnish Software AS
#
# Author: Guillaume Quintard <guillaume.quintard@gmail.com>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

$Module vha 3 "vha VMOD"
$License

DESCRIPTION
===========

``vmod-vha`` provides a set of functions to better control cache replication
through VHA. Note that some of them are already used by the VCL generated by
``vha-generate-vcl`` and that you don't need to call them again.

$Function VOID add_header(STRING name, STRING value)
$Restrict client

Signal VHA to add a new "name: value" header to the replication request. This
can be necessary if Varnish listens to multiple ports and if you want to record
on which one the request was receive::

  import std;
  import vha;

  sub vcl_recv {
	vha.add_header("x-port", std.ip(server.port));
  }

$Function VOID forbid_replication(PRIV_TASK, STRING reason = 0)
$Restrict client backend

Prevent replication of the current request.
``reason`` is a string that will get logged, explaining why the replication was
forbidden.

$Function BOOL replication_allowed(PRIV_TASK)
$Restrict client

Check the internal vmod state to see if ``.forbid_replication()`` was called,
(either explicitly, or via ``.check()``).

$Function VOID replicate_body(PRIV_TASK)
$Restrict client

Note: This is already called from the generated vcl.

Publish the request body to the VSL so that VHA can replicate it to other nodes.

$Function VOID check(PRIV_TASK)
$Restrict client

Note: This is already called from the generated vcl.

Verify that ``vsl_reclen`` is large enough to avoid truncating URL or headers.
If it's too small, the replication is forbidden and an error message is logged.

$Function VOID rollback()
$Restrict vcl_miss

Note: This is already called from the generated vcl.

Undo modifications to ``req`` before fetching from another Varnish node.

$Function BACKEND fail_backend()

Note: This is a helper function and should only be used by the provided vha.vcl.

Returns a null backend, typically used to fail a replication request that would
need to go to the backend again (not allowed).

$Function VOID log(STRING msg)

Log a msg to the VSL as VHA6.

$Function BOOL is_esi()
$Restrict vcl_deliver

Is this an ESI response?

$Function STEVEDORE stevedore(STRING name)
$Restrict client vcl_backend_response vcl_backend_error

Given a string, return a stevedore of that name. If not found,
the storage is unchanged.

$Function VOID skip_ban()
$Restrict vcl_recv vcl_hash

Skip ban request time ban evaluation for this object.

$Function DURATION get_ttl_full()
$Restrict vcl_deliver

Get the original full TTL

$Function TIME get_insertion_time()
$Restrict vcl_deliver

Get the time when the object was inserted

$Function VOID set_insertion_time(TIME time)
$Restrict vcl_backend_response

Set the time when the object was inserted

SEE ALSO
========

``vcl``\(7),
``vha-agent``\(1),
``vha-generate-vcl``\(1)

COPYRIGHT
=========

This document is licensed under the same licence as vmod_vha itself. See
LICENCE for details.

Copyright (c) 2017 Varnish Software AS
